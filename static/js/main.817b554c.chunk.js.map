{"version":3,"sources":["todoReact/logo.png","todoReact/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButtonn","setToggleButton","addItem","map","curElem","id","nam","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","logo","alt","type","placeholder","value","onChange","e","target","onClick","index","item_todo_edited","find","editItem","updatedItem","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAAe,G,MAAA,IAA0B,kC,OCsJ1BA,EArIF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACOG,KAAKC,MAAMJ,GAEX,GAMwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAyCZ,oBAAS,GAAlD,mBAAOa,EAAP,KAAsBC,EAAtB,KAIMC,EAAU,WACZ,GAAKd,EAEE,GAAIA,GAAaY,EACpBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAQC,KAAOP,EACR,2BAAKM,GAAZ,IAAqBE,IAAKlB,IAEvBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEf,CACD,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,IAAKlB,GAETS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,sBAyDd,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,KACpB,wEACA,mCACI,sBAAKH,UAAU,WAAf,UACI,uBACII,KAAK,OACLC,YAAY,mBACZL,UAAU,eACVM,MAAOjC,EACPkC,SAAU,SAACC,GAAD,OAAOlC,EAAakC,EAAEC,OAAOH,UAIvCrB,EACI,mBAAGe,UAAU,sBAAsBU,QAASvB,IAExC,mBAAGa,UAAU,sBAAsBU,QAASvB,OAY5D,qBAAKa,UAAU,YAAf,SAEKnB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAQE,MACb,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,uBAAuBU,QAAS,kBAvExE,SAACC,GACd,IAAMC,EAAmB/B,EAAMgC,MAAK,SAACxB,GACjC,OAAOA,EAAQC,KAAOqB,KAE1BrC,EAAasC,EAAiBrB,KAC9BP,EAAc2B,GACdzB,GAAgB,GAiE2E4B,CAASzB,EAAQC,OACpE,mBAAGU,UAAU,6BAA6BU,QAAS,kBA5D5E,SAACC,GAChB,IAAMI,EAAclC,EAAMmC,QAAO,SAAC3B,GAC9B,OAAOA,EAAQC,KAAOqB,KAE1B7B,EAASiC,GAwDwFE,CAAW5B,EAAQC,YAJrDD,EAAQC,SAazE,qBAAKU,UAAU,gBAAf,SAC0B,wBAAQA,UAAU,YAAY,oBAAkB,aAAaU,QA7DvE,WACd5B,EAAS,KA4De,SACI,gEC7HrBoC,EARH,WACV,OACE,mCACI,cAAC,EAAD,OCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.817b554c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.64a6c5c1.png\";","import React, { useState, useEffect } from 'react';\r\nimport \"./style.css\";\r\nimport logo from \"./logo.png\"\r\n\r\n\r\n// get the localStorage data back\r\n\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"mytodolist\")\r\n\r\n    if (lists) {\r\n        return JSON.parse(lists);\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState(\"\")\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\")\r\n    const [toggleButtonn, setToggleButton] = useState(false)\r\n\r\n    // add the item function\r\n\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('plz fill the data')\r\n        } else if (inputData && toggleButtonn) {\r\n            setItems(\r\n                items.map((curElem) => {\r\n                    if (curElem.id === isEditItem) {\r\n                        return { ...curElem, nam: inputData };\r\n                    }\r\n                    return curElem;\r\n                })\r\n            );\r\n            setInputData([]);\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n        }\r\n        else {\r\n            const myNewInputData = {\r\n                id: new Date().getTime().toString(),\r\n                nam: inputData,\r\n            }\r\n            setItems([...items, myNewInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    };\r\n\r\n    // edit the items\r\n\r\n    const editItem = (index) => {\r\n        const item_todo_edited = items.find((curElem) => {\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_todo_edited.nam);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    };\r\n\r\n\r\n    // how to delete items\r\n\r\n    const deleteItem = (index) => {\r\n        const updatedItem = items.filter((curElem) => {\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updatedItem);\r\n    };\r\n\r\n    // remove all the elements \r\n\r\n    const removeAll = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    // local sotrage adding\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={logo} alt=\"\" />\r\n                        <figcaption>Add Your List Here🤞</figcaption>\r\n                        <figure>\r\n                            <div className=\"addItems\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"✍ Add Items\"\r\n                                    className=\"form-control\"\r\n                                    value={inputData}\r\n                                    onChange={(e) => setInputData(e.target.value)}\r\n                                />\r\n                                {/* toggle button */}\r\n                                {\r\n                                    toggleButtonn ?\r\n                                        <i className=\"fa fa-edit edit-btn\" onClick={addItem}></i>\r\n                                        : (\r\n                                            <i className=\"fa fa-plus plus-btn\" onClick={addItem}></i>\r\n                                        )\r\n                                }\r\n                            </div>\r\n\r\n\r\n                            {/* remove all items */}\r\n\r\n                          \r\n\r\n                            {/* show items  */}\r\n\r\n                            <div className=\"showItems\">\r\n\r\n                                {items.map((curElem) => {\r\n                                    return (\r\n                                        <div className=\"eachItem\" key={curElem.id}>\r\n                                            <h3>{curElem.nam}</h3>\r\n                                            <div className=\"todo-btn\">\r\n                                                <i className=\"far fa-edit edit-btn\" onClick={() => editItem(curElem.id)}></i>\r\n                                                <i className=\"far fa-trash-alt trash-btn\" onClick={() => deleteItem(curElem.id)}></i>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n\r\n\r\n                            </div>\r\n\r\n      <div className=\"clear-all-btn\">\r\n                                <button className=\"clear-all\" data-sm-link-text=\"Remove All\" onClick={removeAll}>\r\n                                    <span> CHECK LIST</span>\r\n                                </button>\r\n                            </div>\r\n\r\n\r\n\r\n                        </figure>\r\n                    </figure>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react'\nimport Todo from './todoReact/todo';\n\nconst App = () => {\n  return (\n    <>\n        <Todo />\n    </>\n  ); \n}; \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}